<apex:component >
	<div ng-controller="becasOFECtrl"  ng-cloak="" id="becasOFECtrl">
        <div class="modal fade" tabindex="-1" role="dialog" id="modalBecasOFE" data-backdrop="static" data-keyboard="false">
          	<div class="modal-dialog modal-lg">
            	<div class="modal-content">
              		<div class="modal-header">
                		<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                		<h4 class="modal-title text-center">
                    		<span class="fa fa-users fa-fw"></span>
                    		Configurar beca de la oferta académica: <strong>{{offer.Name}}</strong> periodo <strong>{{offer.currentPeriod.Name}}</strong>
                		</h4>
              		</div>
                  <form class="form-horizontal" ng-submit="saveScholarship()" name="formScholarshipOFE">
                  		<div class="modal-body">
                          <ul class="list-inline">
                            <li><strong>Modalidad: </strong> <span ng-bind="offer.Modalidad__c"></span></li>
                            <li><strong>Nivel: </strong> <span ng-bind="offer.Nivel__c"></span></li>
                            <li><strong>Plantel: </strong> <span ng-bind="offer.Plantel__c"></span></li>
                            <li><strong>Programa: </strong> <span ng-bind="offer.Programa__c"></span></li>
                          </ul>
                          <div class="table-responsive">
                              <table class="table table-striped">
                                  <thead>
                                    <tr>
                                      <th>A</th> <th>B</th> <th>C</th> <th>D</th> <th>E</th> <th>F</th> <th>G</th> <th>H</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    <tr>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.A__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.B__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.C__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.D__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.E__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.F__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.G__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                      <td>
                                        <ctc-input ng-if="offer.Id" ctc-field="base.Beca__c.k.H__c" ctc-form="formScholarshipOFE" ctc-instance="base.editing"/>
                                      </td>
                                    </tr>
                                  </tbody>
                              </table>

                              <table class="table table-striped">
                                  <thead>
                                      <tr>
                                        <th colspan="10">
                                            Últimos 10 registros con misma Modalidad, Nivel, Plantel y Programa
                                            <a ng-if="base.selected.Id" class="btn btn-success pull-right" ng-click="setEditing()">
                                                <span class="fa fa-clone fa-fw"></span>
                                                Utilizar seleccionado
                                            </a>
                                        </th>
                                      </tr>
                                      <tr>
                                        <th>Periodo</th><th>A</th> <th>B</th> <th>C</th> <th>D</th> <th>E</th> <th>F</th> <th>G</th> <th>H</th><th>Seleccionar</th>
                                      </tr>
                                  </thead>
                                  <tbody>
                                      <tr ng-repeat="sch in base.Beca__c.instances" ng-if="sch.Id !== base.editing.Id">
                                          <td ng-bind="sch.OfertaEducativa__r.Periodo__r.Name"></td>
                                          <td><span ng-bind="sch.A__c"></span>%</td>
                                          <td><span ng-bind="sch.B__c"></span>%</td>
                                          <td><span ng-bind="sch.C__c"></span>%</td>
                                          <td><span ng-bind="sch.D__c"></span>%</td>
                                          <td><span ng-bind="sch.E__c"></span>%</td>
                                          <td><span ng-bind="sch.F__c"></span>%</td>
                                          <td><span ng-bind="sch.G__c"></span>%</td>
                                          <td><span ng-bind="sch.H__c"></span>%</td>
                                          <td>
                                              <div class="radio">
                                                <label>
                                                  <input type="radio" name="optApply" ng-click="useThis(sch)"/>
                                                  Aplicar
                                                </label>
                                              </div>
                                          </td>
                                      </tr>
                                  </tbody>
                              </table>

                          </div>

                          <ctc-errors ctc-err="errors"></ctc-errors>
                          <ctc-messages ctc-msg="messages"></ctc-messages>
                  		</div>
                      <div class="modal-footer">
                          <button ng-disabled="formScholarshipOFE.$invalid || base.saving" type="submit" class="btn btn-success">
                              <span class="fa fa-spinner fa-pulse" ng-if="base.saving"></span>
                              <span class="fa fa-save fa-fw"></span>Guardar
                          </button>
                          <button ng-disabled="base.saving" type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                      </div>
                  </form>
          		</div>
        	</div>
        </div>
  	</div>
  	<script type="text/javascript">
  		var app = angular.module('appIEU');
        app.controller('becasOFECtrl', ['$scope', '$filter', 'sfService', 'ctcUtils', 'filterFilter', '$interval', function($scope, $filter, sfService, ctcUtils, filterFilter, $interval) {

        	//console.log('in becasOFECtrl...');
        	$scope.offer = {};
        	$scope.sfService = sfService;
          $scope.base = {
            Beca__c: {}, 
            describe: ['Beca__c'], 
            RecordType: {
              instances: []
            }, 
            selected: {}, 
            editing: {},
            saving: false
          };
          $scope.errors = [];
          $scope.messages = [];
          var letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];

          $scope.saveScholarship = function() {
              $scope.messages = [];
              $scope.errors = [];
              $scope.base.saving = true;
              angular.forEach(letters, function(l, i) {
                  if($scope.base.editing && $scope.base.editing[l + '__c']) {
                      $scope.base.editing[l + '__c'] = parseInt($scope.base.editing[l + '__c']);
                  }
              });
              $scope.base.editing.RecordTypeId = $scope.base.RecordType.instances[0].Id;
              $scope.base.editing.OfertaEducativa__c = $scope.offer.Id;
              ctcUtils.upsert('Beca__c', [$scope.base.editing], function(err, res) {
                  //console.log('\n\n response upsert...');
                  //console.log(err);
                  //console.log(res);
                  $scope.base.saving = false;
                  if(err) {
                      $scope.errors = err;
                  } else {
                      $scope.messages.push(res[0].created ? 'Beca Comercial creada' : 'Beca comercial actualizada');
                      $scope.base.editing.Id = res[0].id;
                      ctcUtils.upsert('OfertaEducativa__c', [{Id: $scope.offer.Id, Beca__c: $scope.base.editing.Id}], function(err, res) {

                          //console.log('\n\n response upsert OfertaEducativa__c...');
                          //console.log(err);
                          //console.log(res);
                      });
                      $scope.$apply();
                  }
              });
          };

          $scope.useThis = function(sch) {
            angular.forEach($scope.base.Beca__c.instances, function(v, i) {
                if(v.Id === sch.Id) {
                  $scope.base.selected = angular.copy(v);
                }
            });
          };

          $scope.setEditing = function() {
            if($scope.base.selected.Id) {
              var id = $scope.base.editing && $scope.base.editing.Id ? $scope.base.editing.Id : '';
              $scope.base.editing = angular.copy($scope.base.selected);
              delete $scope.base.editing.Id;
              if(id && id.length > 0) {
                $scope.base.editing.Id = id;
              }
            }
          };

          $scope.describeObjects = function() {
            $scope.errors = [];
            if($scope.base && $scope.base.describe) {
                ctcUtils.describe($scope.base.describe, function(err, result) {
                    if(err) {
                        $scope.errors = err;
                    } else {
                        angular.forEach($scope.base.describe, function(v, k) {
                            if(result.hasOwnProperty(v))  {
                                $scope.base[v].a = result[v];
                                $scope.base[v].k = {};
                                angular.forEach(result[v], function(f, i) {
                                    $scope.base[v].k[f.name] = f;
                                });
                            }
                        });
                        angular.forEach(letters, function(l, i) {
                          $scope.base.Beca__c.k[l + '__c'].precision = 2;
                          $scope.base.Beca__c.k[l + '__c'].length = 2;
                        });
                    }
                });
            }
          };

          $scope.loadScholarship = function() {
              $scope.errors = [];
              $scope.base.Beca__c.instances = [];
              var query = 'SELECT Id, RecordTypeId, OfertaEducativa__r.Periodo__r.Name, A__c, B__c, C__c, D__c, E__c, F__c, G__c, H__c FROM Beca__c WHERE RecordType.Name=\'Beca Comercial\' AND OfertaEducativa__r.Modalidad__c=\'' + $scope.offer.Modalidad__c__Id + '\' AND OfertaEducativa__r.Nivel__c=\'' + $scope.offer.Nivel__c__Id + '\' AND OfertaEducativa__r.Plantel__c=\'' + $scope.offer.Plantel__c__Id + '\' AND OfertaEducativa__r.Programa__c=\'' + $scope.offer.Programa__c__Id + '\' AND OfertaEducativa__c!=\'' + $scope.offer.Id + '\' LIMIT 10';
              ctcUtils.retrieve(query, function(err, res) {
                  if(err) {
                      $scope.errors = err;
                  } else {
                      $scope.base.Beca__c.instances = res;
                      $scope.$apply();
                  }
              });
          };

          $scope.getScholarshipCurrent = function() {
              $scope.errors = [];
              $scope.base.Beca__c.instances = [];
              var query = 'SELECT Id,RecordTypeId, OfertaEducativa__r.Periodo__r.Name, A__c, B__c, C__c, D__c, E__c, F__c, G__c, H__c FROM Beca__c WHERE OfertaEducativa__c=\'' + $scope.offer.Id + '\'';
              ctcUtils.retrieve(query, function(err, res) {
                  if(err) {
                      $scope.errors = err;
                  } else {
                      $scope.base.editing = res[0] || {};
                      $scope.$apply();
                  }
              });
          };

          $scope.listRecordsType = function() {
              $scope.errors = [];
              var query = 'SELECT Id, Name, SobjectType, Description FROM RecordType WHERE SobjectType=\'Beca__c\' AND Name=\'Beca Comercial\'';
              ctcUtils.retrieve(query, function(err, res) {
                if(err) {
                    $scope.errors = err;
                } else {
                    $scope.base.RecordType.instances = res;
                }
              });
          };

        	$scope.$watch('sfService.offer', function () {
	            $scope.offer = $scope.sfService.offer;
	            $scope.errors = [];
              $scope.messages = [];
              $scope.base.selected = {};
              $scope.base.editing = {};
              $scope.base.saving = false;
              if($scope.offer && $scope.offer.Id) {
                  $scope.describeObjects();
                  $scope.loadScholarship();
                  $scope.listRecordsType();
                  $scope.getScholarshipCurrent();
              }

	        }, true);
        }]);
        app.directive('ctcErrors', function() {
            return {
                restrict: 'E',
                scope: {
                    errors: '=ctcErr'
                },
                template: '<div class="row" ng-if="errors.length > 0"><div class="col-sm-12"><div class="alert alert-danger"><ul class="list-unstyled"><li ng-repeat="err in errors" ng-bind="err"></li></ul></div></div></div>'
            }
        });
        app.directive('ctcMessages', function() {
            return {
                restrict: 'E',
                scope: {
                    messages: '=ctcMsg'
                },
                template: '<div class="row" ng-if="messages.length > 0"><div class="col-sm-12"><div class="alert alert-success"><ul class="list-unstyled"><li ng-repeat="msg in messages" ng-bind="msg"></li></ul></div></div></div>'
            }
        });
        app.directive('ctcInput', function(){
          return {
            scope: {
                field: '=ctcField',
                form: '=ctcForm',
                instance: '=ctcInstance'
            }, 
            template: '<input ctc-format-number sf-field="field" ng-class="validateClass(form, field.name)" type="text" ng-model="instance[field.name]" class="form-control" name="{{field.name}}" ng-required="field.required" ng-maxlength="field.length"/>',
            link: function($scope, iElm, iAttrs, controller) {
                $scope.validateClass = function(form, fieldName) {
                  if(form && fieldName && form[fieldName]) {
                    return form[fieldName].$valid ? 'ctc-has-success' : 'ctc-has-error';
                  }
                };
            }
          };
        });
        app.directive('ctcFormatNumber', function () {
            return {
                require: 'ngModel',
                scope: {
                  field: '=sfField'
                },
                link: function ($scope, element, attr, ngModelCtrl) {
                    function fromUser(text) {
                        if (text) {
                          var field = $scope.field;
                          var scale = field && $scope.field.scale ? $scope.field.scale : 0;
                            var transformedInput = text;
                          if(scale > 0) {
                            transformedInput = text.replace(/[^0-9\.]/g, '');
                            var decimalCheck = transformedInput.split('.');
                            if(!angular.isUndefined(decimalCheck[1])) {
                              decimalCheck[1] = decimalCheck[1].slice(0, scale);
                              transformedInput = decimalCheck[0] + '.' + decimalCheck[1];
                            }
                          } else {
                            transformedInput = text.replace(/[^0-9]/g, '');
                          }
                            if(field.precision && transformedInput.length > field.precision) {
                              transformedInput = transformedInput.substring(0, field.precision);
                            }
                            if (transformedInput !== text) {
                                ngModelCtrl.$setViewValue(transformedInput);
                                ngModelCtrl.$render();
                            }
                            return transformedInput;
                        }
                        return '';
                    }            
                    ngModelCtrl.$parsers.push(fromUser);
                }
            };
        });
        app.factory('ctcUtils', function($filter, $interval) {
              var delay = 300;

            var describeObject = function(objects, callback) {
              OFE_OfertaEducativaCtrl.describe(objects, function(result, event) {
                  if(result) {
                     var metadata = {};
                      angular.forEach(result, function(v, i) {
                          var fields = [];
                          angular.forEach(v.fields, function(field, index) {
                              var isRequired = (field.createable && !field.nillable && !field.defaultedOnCreate) || !field.custom;
                              var mdField = {name: field.name, label: field.label, type: field.type, length: field.length, required: isRequired};
                              if(field.type === 'picklist' || field.type === 'multipicklist' || field.type === 'reference') {
                                if(field.picklistValues && field.picklistValues.length > 0) {
                                      var values = [];
                                      angular.forEach(field.picklistValues, function(it) {
                                          values.push({label: it.label, value: it.value});
                                      });
                                      mdField.values = values;
                                }
                                  mdField.referenceTo = field.referenceTo
                              } else if(field.type === 'double' || field.type === 'percent') {
                                mdField.precision = field.precision;
                                mdField.scale = field.scale;
                              }
                              if(field.hasOwnProperty('inlineHelpText')) {
                                mdField.helpText = field.inlineHelpText;
                              }
                              fields.push(mdField);
                          });
                          metadata[v.name] = fields;
                      });
                      callback(null, metadata);
                  } else {
                      callback([event.message], null);
                  }
              });

            };
            var retrieveObject = function(query, callback) {
              OFE_OfertaEducativaCtrl.query(query, function(result, event) {
                  if(result) {
                      callback(null, result);
                  } else {
                      callback([event.message], null);
                  }
              });
            };
            var upsertObjects = function(objType, upserts, callback) {
                OFE_OfertaEducativaCtrl.upsertObjects(objType, JSON.stringify(upserts), function(result, event) {
                    if(result) {
                        callback(null, result);
                    } else {
                        callback([event.message], null);
                    }
                });
            };
            var deleteObjects = function(ids, callback) {
              /*sforce.connection.deleteIds(ids, {
                onSuccess: function(res) {
                  callback(res);
                },
                onFailure: function(res) {
                  callback(res);
                }
              });*/
            };
            var parseDate =  function(date) {
                return $filter('date')(date, 'dd/MM/yyyy');
            };
            var findElementInArray = function(field, value, datasource) {
                var ret = {};
                if(field && value && datasource) {
                    var res = $filter('filter')(datasource, {[field]: value}, true);
                    if(res && res.length > 0) {
                        ret = res[0];
                    }
                }
                return ret;
            };
            var fieldIsValid = function(fieldName, form) {
                if(!fieldName || !form) {
                    return '';
                } else {
                    return form[fieldName].$valid ? 'has-success' : 'has-error';
                }
            };
            var createDate = function(strDate) {
                var date = null;
                strDate = strDate || '';
                strDate = strDate.split('/');
                if(strDate.length > 2) {
                    date = new Date();
                    date.setDate(strDate[0]);
                    date.setMonth(strDate[1]  - 1);
                    date.setFullYear(strDate[2]);
                }
                return date;
            };
            return {
              describe: describeObject,
              retrieve: retrieveObject,
              upsert: upsertObjects,
              delete: deleteObjects,
              parseDate: parseDate,
              findElement: findElementInArray,
              fieldIsValid: fieldIsValid,
              createDate: createDate
            }
          });
    </script>
    <style type="text/css">
      .ctc-has-success {border-color: #3c763d; box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;}
      .ctc-has-success:focus {border-color: #2b542c; box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #67b168; }
      .ctc-has-error {border-color: #a94442; box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;}
      .ctc-has-error:focus {border-color: #843534; box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 6px #ce8483;}
    </style>
</apex:component>